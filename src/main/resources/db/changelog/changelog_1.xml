<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog/1.7"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog/1.7
         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.7.xsd">
    <changeSet id="1" author="diego">

        <sql>
            drop table if exists api.oauth_client_details;
            create table api.oauth_client_details (
            client_id VARCHAR(255) PRIMARY KEY,
            resource_ids VARCHAR(255),
            client_secret VARCHAR(255),
            scope VARCHAR(255),
            authorized_grant_types VARCHAR(255),
            web_server_redirect_uri VARCHAR(255),
            authorities VARCHAR(255),
            access_token_validity INTEGER,
            refresh_token_validity INTEGER,
            additional_information VARCHAR(4096),
            autoapprove VARCHAR(255)
            );

            drop table if exists api.oauth_client_token;
            create table api.oauth_client_token (
            token_id VARCHAR(255),
            token LONG VARBINARY,
            authentication_id VARCHAR(255) PRIMARY KEY,
            user_name VARCHAR(255),
            client_id VARCHAR(255)
            );

            drop table if exists api.oauth_access_token;
            create table api.oauth_access_token (
            token_id VARCHAR(255),
            token LONG VARBINARY,
            authentication_id VARCHAR(255) PRIMARY KEY,
            user_name VARCHAR(255),
            client_id VARCHAR(255),
            authentication LONG VARBINARY,
            refresh_token VARCHAR(255)
            );

            drop table if exists api.oauth_refresh_token;
            create table api.oauth_refresh_token (
            token_id VARCHAR(255),
            token LONG VARBINARY,
            authentication LONG VARBINARY
            );

            drop table if exists api.oauth_code;
            create table api.oauth_code (
            code VARCHAR(255), authentication LONG VARBINARY
            );

            drop table if exists api.oauth_approvals;
            create table api.oauth_approvals (
            userId VARCHAR(255),
            clientId VARCHAR(255),
            scope VARCHAR(255),
            status VARCHAR(10),
            expiresAt TIMESTAMP,
            lastModifiedAt TIMESTAMP
            );

            drop table if exists api.ClientDetails;
            create table api.ClientDetails (
            appId VARCHAR(255) PRIMARY KEY,
            resourceIds VARCHAR(255),
            appSecret VARCHAR(255),
            scope VARCHAR(255),
            grantTypes VARCHAR(255),
            redirectUrl VARCHAR(255),
            authorities VARCHAR(255),
            access_token_validity INTEGER,
            refresh_token_validity INTEGER,
            additionalInformation VARCHAR(4096),
            autoApproveScopes VARCHAR(255)
            );
        </sql>

    </changeSet>

    <changeSet id="2" author="diego">
        <sql>
            CREATE TABLE api.tb_usuario (
            id INT(11) NOT NULL AUTO_INCREMENT,
            login VARCHAR(255) NOT NULL,
            nome VARCHAR(255) NOT NULL,
            senha VARCHAR(255) NOT NULL,
            PRIMARY KEY (id),
            UNIQUE INDEX idx_login (login)
            );
        </sql>

        <sql>
            CREATE TABLE api.tb_permissao (
            id INT(11) NOT NULL AUTO_INCREMENT,
            descricao VARCHAR(255) NOT NULL,
            PRIMARY KEY (id)
            )
        </sql>

        <sql>
            CREATE TABLE api.tb_usuario_permissao (
                id_usuario INT(11) NOT NULL,
                id_permissao INT(11) NOT NULL,
                PRIMARY KEY (id_usuario, id_permissao),
                INDEX fk_permissao (id_permissao),
                CONSTRAINT FK_apcc8lxk2xnug8377fatvbn04 FOREIGN KEY (id_usuario) REFERENCES api.tb_usuario (id),
                CONSTRAINT FK_it77eq964jhfqtu54081ebtio FOREIGN KEY (id_permissao) REFERENCES api.tb_permissao (id)
            );
        </sql>
    </changeSet>

</databaseChangeLog>